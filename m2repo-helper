#!/bin/bash

function usage () {
   echo "$0 [-i jar2install-version.jar] [-s (search for groupid|artifactId)]"
}

function set_import_values() {

    JARFILE=$1
    GROUPID=$2
    ARTIFACTID=$3
    VERSION=$4

    while true; do 
        echo "Verify the following values are correct:"
        echo " 1) File:     $JARFILE"
        echo " 2) Group ID: $GROUPID"
        echo " 3) Artifact: $ARTIFACTID"
        echo " 4) Version:  $VERSION"
        echo " 5) Packaging: $PACKAGING"
        #echo " 6) Local Repo: $LOCALREPO"

        echo "To make changes, enter the line number and the new value(i.e. '1 newjarfile.jar'): "
        read INPUT
        selection=${INPUT[@]:0:1}
        value=${INPUT[@]:1}
        case "$selection" in
            1) JARFILE=$value;;
            2) GROUPID=$value;;
            3) ARTIFACTID=$value;;
            4) VERSION=$value;;
            5) PACKAGING=$value;;
            #6) LOCALREPO=$value;;
            *) break;;
        esac
    done

}

PACKAGING="jar"
LOCALREPO="~/.m2/repository"
JARFILE=""
GROUPID=""
ARTIFACTID=""
VERSION=""

function install() {
    jarfile=$1;
    version=$(expr match "$jarfile" '.*-\(.*\)\.jar')
    fullclass=$(jar -tf "$jarfile" | tail -n 1)
    groupId=$(expr match "$fullclass" '\(\w*\/\w*\)\/.*')
    groupId=${groupId/\//.}
    artifactId=$(expr match "$fullclass" '\w*\/\w*\/\(\w*\)\/.*')
    
    set_import_values $jarfile $groupId $artifactId $version 

    mvn install:install-file -Dfile=$JARFILE -DgroupId=$GROUPID -DartifactId=$ARTIFACTID -Dversion=$VERSION -Dpackaging=$PACKAGING
}

function search() {
    echo "not yet implemented"
}


while getopts i:s:h flag
do
    case "$flag" in
        i) install $OPTARG;;
        s) search $OPTARG;;
        h) usage;exit 0;;
        *) usage;exit 1;;
    esac
done


